# Input: Graph G = (V, E), node v to contract
# Output: Modified G with shortcuts added and v removed, list of shortcuts

def contract_node(G, v, shortcuts):
    for u in G.neighbors(v):
        for w in G.neighbors(v):
            if u != w and shortestPathViaContractNode(u, w, v):
                weight = t(u, v) + t(v, w)
                G.add_edge(u, w, weight=weight)
                shortcuts.append((u, w, weight))

    G.remove_node(v)
